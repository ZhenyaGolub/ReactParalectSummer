{"version":3,"sources":["redux/types.js","redux/actions.js","utils.js","components/Header.jsx","components/Empty.jsx","components/UserContent.jsx","components/Pagination.jsx","components/Repositories.jsx","components/User.jsx","components/Loader.jsx","App.js","redux/initialState.js","redux/reducer.js","redux/store.js","index.js"],"names":["FETCH_USER","CHANGE_EMPTY","TOGGLE_LOADER","getUser","user","type","payload","toggleLoader","createUserModel","repositories","login","name","followers","following","imageURL","avatar_url","url","html_url","totalAmount","public_repos","list","map","rep","description","link","id","Header","dispatch","useDispatch","useState","username","setUsername","searchRef","useRef","fetchUser","e","a","preventDefault","current","value","trim","axios","get","requestsAmount","Math","ceil","data","promise","Promise","resolve","reject","i","push","repositoriesList","className","href","target","onSubmit","onInput","ref","placeholder","Empty","useSelector","emptyContent","UserContent","src","alt","Pagination","pageCount","changePage","repositoriesAmout","firstCurrentPageRepository","lastCurrentPageRepository","previousLabel","nextLabel","breakLabel","breakClassName","disabledClassName","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","activeClassName","Repositories","currentPage","setCurrentPage","offset","currentPageRepositories","slice","repository","length","selected","User","Loader","App","state","isLoader","initialState","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d673c9.chunk.js","sourcesContent":["export const FETCH_USER = 'FETCH_USER';\r\nexport const CHANGE_EMPTY = 'CHANGE_EMPTY';\r\nexport const TOGGLE_LOADER = 'TOGGLE_LOADER';\r\n","import { CHANGE_EMPTY, FETCH_USER, TOGGLE_LOADER } from './types';\r\n\r\nexport const getUser = (user) => ({\r\n    type: FETCH_USER,\r\n    payload: user\r\n})\r\n\r\nexport const changeEmptyContent = () => ({\r\n    type: CHANGE_EMPTY\r\n})\r\n\r\nexport const toggleLoader = () => ({\r\n    type: TOGGLE_LOADER\r\n})","export const createUserModel = ({ login, name, followers, following, avatar_url, html_url, public_repos }, repositories) => {\r\n    const userModel = {\r\n        login: login,\r\n        name: name,\r\n        followers: followers,\r\n        following: following,\r\n        imageURL: avatar_url,\r\n        url: html_url,\r\n        repositories: {\r\n            totalAmount: public_repos,\r\n            list: repositories.map(rep => {\r\n                return {\r\n                    name: rep.name,\r\n                    description: rep.description,\r\n                    link: rep.html_url,\r\n                    id: rep.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return userModel;\r\n}","import React, { useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeEmptyContent, getUser, toggleLoader } from '../redux/actions';\r\nimport { createUserModel } from '../utils';\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [username, setUsername] = useState('');\r\n    const searchRef = useRef();\r\n\r\n    const fetchUser = async (e) => {\r\n        e.preventDefault();\r\n        if(searchRef.current.value.trim() !== ''){\r\n            try {\r\n                dispatch(toggleLoader());\r\n                const user = await axios.get(`https://api.github.com/users/${username}`);\r\n                const MAX_PER_PAGE = 100;\r\n                const requestsAmount = Math.ceil(user.data.public_repos / MAX_PER_PAGE);\r\n\r\n                let promise = new Promise(async (resolve, reject) => {\r\n                    let repositories = [];    \r\n                    for(let i = 1; i <= requestsAmount; i++){\r\n                        const list = await axios.get(`https://api.github.com/users/${username}/repos?per_page=100&page=${i}`);\r\n                        repositories.push(...list.data)\r\n                    }\r\n                    resolve(repositories);\r\n                })\r\n\r\n                const repositoriesList = await promise;\r\n\r\n                dispatch(toggleLoader());\r\n                dispatch(getUser(createUserModel(user.data, repositoriesList)));\r\n                setUsername('');\r\n                searchRef.current.value = '';\r\n            } catch(e){\r\n                dispatch(toggleLoader());\r\n                dispatch(changeEmptyContent());\r\n                dispatch(getUser(null));\r\n                setUsername('');\r\n                searchRef.current.value = '';\r\n            }\r\n        } \r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n        <div className=\"container\">\r\n            <div className=\"header__inner\">\r\n                <div className=\"header__logo\">\r\n                    <a href=\"https://github.com/\" target=\"_blank\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                    </a>\r\n                </div>\r\n                <form className=\"header__search\" onSubmit={fetchUser}>\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <input onInput={(e) => setUsername(e.target.value.trim())} ref={searchRef} type=\"search\" className=\"header__search-input\" placeholder=\"Enter GitHub username\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Empty = () => {\r\n\r\n    const emptyType = useSelector(({ emptyContent }) => emptyContent);\r\n\r\n    if(emptyType === 'START'){\r\n        return (\r\n            <div className=\"empty-wrapper\">\r\n                <div className=\"empty-content\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <p>Start with searching <br/> a GitHub user</p>\r\n                </div>\r\n            </div>\r\n        )   \r\n    } else {\r\n        return (\r\n            <div className=\"empty-wrapper\">\r\n                <div className=\"empty-content\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <p>User not found</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Empty\r\n","import React from 'react'\r\n\r\nconst UserContent = ({user}) => {\r\n    \r\n    const { login, name, followers, following, imageURL, url } = user;\r\n\r\n    return (\r\n        <div className=\"main__user-information\">\r\n            <div className=\"main__user-model\">\r\n                <div className=\"main__user-avatar\">\r\n                    <img src={imageURL} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className=\"main__user-features\">\r\n                    <h2 className=\"main__user-login\">{name}</h2>\r\n                    <a href={url} target=\"_blank\" className=\"main__user-name\">{login}</a>\r\n                    <div className=\"main__user-follow\">\r\n                        <a href={`https://github.com/${login}?tab=followers`} target=\"_blank\" className=\"main__user-followers\"><i className=\"fas fa-user-friends\"></i>{followers} followers</a>\r\n                        <a href={`https://github.com/${login}?tab=following`} target=\"_blank\" className=\"main__user-following\"><i className=\"fas fa-user\"></i>{following} following</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserContent\r\n","import React, { useState } from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nfunction Pagination({ pageCount, changePage, repositoriesAmout, firstCurrentPageRepository, lastCurrentPageRepository }) {\r\n    return (\r\n      <div className=\"pagination-wrapper\">\r\n        <span className=\"pagination-information\">{firstCurrentPageRepository}-{lastCurrentPageRepository} of {repositoriesAmout} items</span>\r\n        <ReactPaginate\r\n          previousLabel={<i className=\"fas fa-chevron-left\"></i>}\r\n          nextLabel={<i className=\"fas fa-chevron-right\"></i>}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          disabledClassName={'disabled'}\r\n          pageCount={pageCount}\r\n          onPageChange={changePage}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={2}\r\n          containerClassName={'pagination'}\r\n          activeClassName={'active'}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState } from 'react'\r\nimport Pagination from './Pagination';\r\n\r\nconst Repositories = ({ repositories }) => {\r\n\r\n    const { totalAmount, list } = repositories;\r\n\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const PER_PAGE = 4;\r\n\r\n    const offset = currentPage * 4;\r\n\r\n    const pageCount = Math.ceil(totalAmount / PER_PAGE);\r\n\r\n    const changePage = ({ selected }) => {\r\n        setCurrentPage(selected);\r\n    }\r\n\r\n    const currentPageRepositories = list.slice(offset, offset + PER_PAGE).map(repository => {\r\n        return (\r\n            <div key={repository.id} className=\"main__user-repositories-item\">\r\n                <a href={repository.link} target=\"_blank\" className=\"main__user-repositories-name\">{repository.name}</a>\r\n                <p className=\"main__user-repositories-description\">{repository.description}</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    if(!list.length){\r\n        return (\r\n            <div className=\"main__user-repositories empty-repositories\">\r\n            <div className=\"empty-repositories-content\">\r\n                    <i className=\"fas fa-archive\"></i>\r\n                    <p>Repository list is empty</p>\r\n                </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"main__user-repositories\">\r\n                <h1 className=\"main__user-repositories-title\">Repositories ({totalAmount})</h1>\r\n                <div className=\"main__user-repositories-list\">\r\n                    {\r\n                        currentPageRepositories\r\n                    } \r\n                </div>\r\n                <Pagination \r\n                    pageCount={pageCount} \r\n                    changePage={changePage} \r\n                    repositoriesAmout={totalAmount} \r\n                    firstCurrentPageRepository={offset + 1} \r\n                    lastCurrentPageRepository={offset + currentPageRepositories.length}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Repositories\r\n","import React from 'react'\r\nimport UserContent from './UserContent'\r\nimport Repositories from './Repositories'\r\n\r\nconst User = ({user}) => {\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <div className=\"main__user\">\r\n                    <UserContent user={user}/>\r\n                    <Repositories repositories={user ? user.repositories : {}}/>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"lds-roller\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './styles/main.scss';\r\n\r\nimport Header from './components/Header';\r\nimport Empty from './components/Empty';\r\nimport User from './components/User';\r\nimport Loader from './components/Loader';\r\n\r\nconst App = () => {\r\n\r\n    const { user, isLoader} = useSelector((state) => state);\r\n\r\n    const render = () => {\r\n        if(isLoader){\r\n            return (\r\n                <Loader/>\r\n            )\r\n        } else{\r\n            return(\r\n                user ? <User user={user}/> : <Empty/>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {\r\n                render()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const initialState = {\r\n    emptyContent: 'START',\r\n    user: null,\r\n    isLoader: false\r\n}\r\n\r\nexport default initialState","import initialState from './initialState'\r\nimport { CHANGE_EMPTY, FETCH_USER, TOGGLE_LOADER } from './types';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return {...state, user: action.payload}\r\n        case CHANGE_EMPTY:\r\n            return {...state, emptyContent: 'USER NOT FOUND'}\r\n        case TOGGLE_LOADER:\r\n            return {...state, isLoader: !state.isLoader}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}